<?php
/**
 * Created by PhpStorm.
 * User: jiangzhuoran
 * Date: 2015/9/14
 * Time: 9:42
 */
namespace Modules\App\Controllers;
class BShopController extends  BAppController{
    var $tagArr = [];

    public function initialize(){
        parent::initialize();
        $this->tagArr = [1=>"快餐/食堂",2=>'普通餐馆',3=>'高档酒楼'];
    }
    //用户客户列表
    public function listAction(){
        $partnerId = $this->userId;
        $limit = $this->request->getQuery('limit','int',10);
        $offset = $this->request->getQuery('offset','int',0);
        $shopsku = $this->getModel('shopSku')->find('is_del = 0 and partner_id ='.$partnerId)->toArray();
        if(!empty($shopsku)) {
            foreach ($shopsku as $key => $val) {
                $shopid[] = $val['shop_id'];
                $newshop = array_unique($shopid);
            }
            $box = '';
            if (isset($newshop)) {
                foreach ($newshop as $key => $val) {
                    $box .= "," . $val;
                }
            }
            $newbox = substr($box, 1);
            $where = ' is_del = 0 and id in (' . $newbox . ')';
            $shop = $this->getModel('shop')->find(array($where,"order"=>"id desc", "limit"=>$limit, "offset"=>$offset))->toArray();
            foreach ($shop as $key=>$val) {
                if($val['platform'] == 'partner' || $val['platform'] == 'app_partner'){
                    $shop[$key]['type_key'] = '自助订单';
                    $shop[$key]['type'] = 'self';
                }else{
                    $shop[$key]['type_key'] = '下发订单';
                    $shop[$key]['type'] = 'app';
                }
            }
            return $this->renderJson(['list'=>$shop,'num'=>$this->getModel('shop')->count($where)]);
        }
        return $this->renderJson(['list'=>array(),'num'=>0]);
    }

    //自助客户列表

    public function shoplistAction(){
        $partnerId = $this->userId;
        $limit = $this->request->getQuery('limit','int',10);
        $offset = $this->request->getQuery('offset','int',0);
        $shopsku = $this->getModel('shopSku')->find('is_del = 0 and partner_id ='.$partnerId)->toArray();
        if(!empty($shopsku)) {
            foreach ($shopsku as $key => $val) {
                $shopid[] = $val['shop_id'];
                $newshop = array_unique($shopid);
            }
            $box = '';
            if (isset($newshop)) {
                foreach ($newshop as $key => $val) {
                    $box .= "," . $val;
                }
            }
            $newbox = substr($box, 1);
            $where = ' is_del = 0 and id in (' . $newbox . ') and platform = "app_partner" or platform = "partner"';
            $shop = $this->getModel('shop')->find(array($where,"order"=>"id desc", "limit"=>$limit, "offset"=>$offset))->toArray();
            return $this->renderJson(['list'=>$shop,'num'=>$this->getModel('shop')->count($where)]);
        }
    }

    //添加客户
    public function createAction(){
        $partnerId = $this->userId;
            if($this->request->isPost()) {
                $type = $this->request->getPost('type');
                $mobile = $this->request->getPost('contact_mobile');
                $saleId = $this->request->getPost('sale_id');

                if(!preg_match('/^1([0-9]{9})/',$mobile)){
                    $messages = "您输入的手机号格式不正确";
                    return $this->renderJson([],$messages);
                }
                $arr['creator_id'] = $partnerId;
                $arr['sale_id'] = $saleId;
                $arr['name'] = trim($this->request->getPost('name'));
                $arr['contact_mobile'] = $mobile;
                $arr['address'] = trim($this->request->getPost('address'));
                $arr['contact_name'] = trim($this->request->getPost('contact_name'));
                $arr['best_time'] = $this->request->getPost('best_time');
                $arr['partner_id'] = $partnerId;
                $return = $this->getModel('shop')->createShopByMobile($mobile,$arr,$type);
                return $this->renderJson(['shop'=>$return]);
        }
    }


    /*
       function：修改客户信息
       author: zrg
       date:2015-08-10
   */
    public function updateAction(){

        if($this->request->isPost()) {
            $shopId = $this->request->getPost('shop_id');
            $shopInfo = $this->getModel('shop')->findById($shopId);
            $message = '';
            if($shopInfo['id'] < 1){
                $message = "没有改店铺";
            }
            if($this->request->getPost('name') != $shopInfo['name']){
                if($this->getModel('shop')->count("name='".$this->request->getPost('name')."'") ){
                    $message = "店铺名不能为空字符串或已存在";
                }
            }
            if(!$message) {
                //保存店铺信息
                $shop = array(
                    'name' => $this->request->getPost('name'),
                    'address' => $this->request->getPost('address'),
                    'contact_name' => $this->request->getPost('contact_name'),
                    'contact_mobile' => $this->request->getPost('contact_mobile'),
                    'best_time' => $this->request->getPost('best_time'),
                );
                $return = $this->createModel('shop')->updateOne($shopId, $shop);
                if ($return['error'] == '') {
                    //保存销售人员信息
                    $saleInfo = ['sale_id' => $this->request->getPost('sale_id')];
                    $this->createModel('user')->updateOne($shopInfo['user_id'], $saleInfo);
                } else {
                    $message = $return['error'];
                }
            }
        }
        return $this->renderJson([],$message);

    }


    //客户详情
    public function detailAction(){
        $messages = '';
        $shopId = $this->request->getQuery('shop_id');
        $limit = $this->request->getQuery('limit') ? $this->request->getQuery('limit') : 10;
        $offset = $this->request->getQuery('offset') ? $this->request->getQuery('offset') : 0;
        $partnerId = $this->userId;
        $shopInfo = $this->getModel('shop')->findById($shopId);
        if(!$shopInfo){
            $messages = "该客户不存在";
        }
        $areaname = $this->getModel('region')->findById($shopInfo['area_id']);
        if($areaname['name']) {
            $shopInfo['area_name'] = $areaname['local_name'];
        }else{
            $shopInfo['area_name'] = '';
        }
        if($shopInfo['platform'] == 'partner' || $shopInfo['platform'] == 'app_partner'){
            $shopInfo['type_key'] = '自助订单';
            $shopInfo['type'] = 'self';
        }else{
            $shopInfo['type_key'] = '下发订单';
            $shopInfo['type'] = 'app';
        }
        $where = "is_del = 0 and shop_id = ".$shopId;
        $columns = ['order_id','subcontract','buy_amount','pay_amount','ctime'];
        $condition = array(
            'columns' => $columns,
            'conditions' => $where,
            "order" => isset($order) ? $order : 'ctime desc',
            "limit" => $limit,
            "offset" => $offset
        );
        $orderList = $this->getModel('OrderSubcontract')->find($condition);
        if($orderList){
            $orderList = $orderList->toArray();
            foreach($orderList as $key=>$val){
                $orderList[$key]['ctime'] = date('Y-m-d H:i:s',$orderList[$key]['ctime']);
            }
        }
        return $this->renderJson(['shop'=>$shopInfo,'orderList'=>$orderList],$messages);
    }



    public function deleteAction(){

        $shopId = $this->request->getQuery('shop_id');
        $shop = $this->getModel('shop')->findFirst($shopId);
        if(!isset($shop->id)){
            return $this->renderJson([],'店铺不存在');
        }
        if($shop->platform != 'app_partner' || $shop->platform != 'partner'){
            return $this->renderJson([],'不能删除下发客户');
        }
        //删除记录
        $shop->is_del = 1;
        if($shop->save()) {
           return $this->renderJson($shop);
        }else{
           return $this->renderJson([],$shop->getError());
        }
    }

    //搜索
    public function searchAction()
    {
        $partnerId = $this->userId;
        $limit = $this->request->getQuery('limit') ? $this->request->getQuery('limit') : 10;
        $offset = $this->request->getQuery('offset') ? $this->request->getQuery('offset') : 0;
        $condition = 'is_del = 0 and partner_id =' . $partnerId;
        $shopsku = $this->getModel('shopSku')->find([$condition])->toArray();
        if (!empty($shopsku)) {
            foreach ($shopsku as $key => $val) {
                $shopid[] = $val['shop_id'];
                $newshop = array_unique($shopid);
            }

            $box = '';
            if (isset($newshop)) {
                foreach ($newshop as $key => $val) {
                    $box .= "," . $val;
                }
            }
            $newbox = substr($box, 1);
            //搜索条件初始化
            $where = ' is_del = 0 and type = 1 and id in (' . $newbox . ')';
            $search = $this->request->getQuery('search');
            $where .= " and name like '%" . $search . "%'";
            $shoplist = $this->getModel('shop')->find(array($where,"order"=>"id desc", "limit"=>$limit, "offset"=>$offset))->toArray();
            return $this->renderJson(['list'=>$shoplist,'num'=>$this->getModel('shop')->count(array($where))]);
        }

    }


    public function arealistAction(){
        $limit = $this->request->getQuery('limit','int',10);
        $offset = $this->request->getQuery('offset','int',0);
        $columns = ['id','local_name','en_name'];
        $condition = "is_del = 0";
        $list = $this->getModel('region')->find(array($condition,'columns'=>$columns,'order'=>'id desc','limit'=>$limit,'offset'=>$offset))->toArray();
        return $this->renderJson(['list'=>$list]);
    }

}