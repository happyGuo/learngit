<?php
/**
 * Created by PhpStorm.
 * User: xiaochuan
 * Date: 2015/8/21
 * Time: 10:27
 */

namespace Libs\alipay;
class MobileAlipay
{
    protected $alipay_config;
    protected $payment_type = "1";//支付类型
    protected $notify_url = ''; //服务器异步通知页面路径
    protected $return_url = ''; //页面跳转同步通知页面路径

    public function __construct($alipay_config,$notify_url,$return_url)
    {
        $this->alipay_config = $alipay_config;
        $this->notify_url = $notify_url;
        $this->return_url = $return_url;
        //签名方式 不需修改
        $this->alipay_config['sign_type'] = strtoupper('RSA');
        //字符编码格式 目前支持 gbk 或 utf-8
        $this->alipay_config['input_charset'] = strtolower('utf-8');
        //ca证书路径地址，用于curl中ssl校验
        //请保证cacert.pem文件在当前文件夹目录中
        $this->alipay_config['cacert'] = getcwd() . '\\cacert.pem';
        //访问模式,根据自己的服务器是否支持ssl访问，若支持请选择https；若不支持请选择http
        $this->alipay_config['transport'] = 'http';
        //商户的私钥（后缀是.pen）文件相对路径
        $this->alipay_config['private_key_path'] = __DIR__ . 'key/rsa_private_key.pem';
        //支付宝公钥（后缀是.pen）文件相对路径
        $this->alipay_config['ali_public_key_path'] = __DIR__ . '/key/rsa_public_key.pem';
    }

    /**
     * 支付宝支付接口
     * @param $out_trade_no  商户订单号
     * @param $subject  订单名称
     * @param $total_fee    付款金额
     * @param $show_url 商品展示地址
     * @param string $body  订单描述
     * @return mixed
     */
    public function alipayApi($out_trade_no, $subject, $total_fee, $show_url = '', $body = '')
    {
        require_once(__DIR__ . "/lib/alipay_submit.class.php");
        //构造要请求的参数数组，无需改动
        $parameter = array(
            "service" => "alipay.wap.create.direct.pay.by.user",
            "partner" => trim($this->alipay_config['partner']),
            "seller_id" => trim($this->alipay_config['seller_id']),
            "payment_type" => $this->payment_type,
            "notify_url" => $this->notify_url,
            "return_url" => $this->return_url,
            "out_trade_no" => $out_trade_no,
            "subject" => $subject,
            "total_fee" => $total_fee,
            "show_url" => $show_url,
            "body" => $body,
            "_input_charset" => trim(strtolower($this->alipay_config['input_charset']))
        );

        //建立请求
        $alipaySubmit = new \AlipaySubmit($this->alipay_config);
        return $alipaySubmit->buildRequestHttp($parameter);
    }

    public function notify($callback){
        require_once(__DIR__ . "/lib/alipay_notify.class.php");
        //计算得出通知验证结果
        $alipayNotify = new \AlipayNotify($this->alipay_config);
        $verify_result = $alipayNotify->verifyNotify();

        if($verify_result) {//验证成功
            call_user_func($callback,"success",$_POST);
        }
        else {
            //验证失败
            call_user_func($callback,"fail",$_POST);
            //调试用，写文本函数记录程序运行情况是否正常
            //logResult("这里写入想要调试的代码变量值，或其他运行的结果记录");
        }
    }

    public function returnFun($callback){
        require_once(__DIR__ . "/lib/alipay_notify.class.php");
        //计算得出通知验证结果
        $alipayNotify = new \AlipayNotify($this->alipay_config);
        $verify_result = $alipayNotify->verifyNotify();

        if($verify_result) {//验证成功
            call_user_func($callback,'success',$_GET);
        }
        else {
            //验证失败
            call_user_func($callback,'fail',$_GET);
            //调试用，写文本函数记录程序运行情况是否正常
            //logResult("这里写入想要调试的代码变量值，或其他运行的结果记录");
        }
    }
}